<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bjwg.main.dao.ServiceProtocolDao" >
  <resultMap id="BaseResultMap" type="com.bjwg.main.model.ServiceProtocol" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="spro_sp_id" property="spId" jdbcType="BIGINT" />
    <result column="spro_ctime" property="ctime" jdbcType="TIMESTAMP" />
    <result column="spro_type" property="type" jdbcType="TINYINT" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.bjwg.main.model.ServiceProtocol" extends="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="spro_content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    spro.sp_id as spro_sp_id, spro.ctime as spro_ctime, spro.type as spro_type
  </sql>
  <sql id="Blob_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    spro.content as spro_content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.bjwg.main.model.ServiceProtocolExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from bjwg_service_protocol spro
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="OracleDialectSuffix" />
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.bjwg.main.model.ServiceProtocolExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bjwg_service_protocol spro
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="OracleDialectSuffix" />
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from bjwg_service_protocol spro
    where spro.sp_id = #{spId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from bjwg_service_protocol
    where sp_id = #{spId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.bjwg.main.model.ServiceProtocol" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey resultType="java.lang.Long" keyProperty="spId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bjwg_service_protocol (ctime, type, content
      )
    values (#{ctime,jdbcType=TIMESTAMP}, #{type,jdbcType=TINYINT}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bjwg.main.model.ServiceProtocol" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey resultType="java.lang.Long" keyProperty="spId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bjwg_service_protocol
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="ctime != null" >
        ctime,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="ctime != null" >
        #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null" >
        #{type,jdbcType=TINYINT},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bjwg.main.model.ServiceProtocolExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from bjwg_service_protocol spro
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.bjwg.main.model.ServiceProtocol" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update bjwg_service_protocol
    <set >
      <if test="ctime != null" >
        ctime = #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where sp_id = #{spId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.bjwg.main.model.ServiceProtocol" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update bjwg_service_protocol
    set ctime = #{ctime,jdbcType=TIMESTAMP},
      type = #{type,jdbcType=TINYINT},
      content = #{content,jdbcType=LONGVARCHAR}
    where sp_id = #{spId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bjwg.main.model.ServiceProtocol" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update bjwg_service_protocol
    set ctime = #{ctime,jdbcType=TIMESTAMP},
      type = #{type,jdbcType=TINYINT}
    where sp_id = #{spId,jdbcType=BIGINT}
  </update>
  <sql id="OracleDialectSuffix" >
    <if test="page != null" >
      limit #{page.currentRow} , #{page.perRows}
    </if>
  </sql>
  
  <select id="selectByType" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select
      distinct
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from bjwg_service_protocol spro
    inner join bjwg_dict_detail as dd,bjwg_dict as dict
    where spro.type = dd.value 
    and dict.code = 'BJWG_SERVICE_PROTOCOL.TYPE'
    and dd.code = #{code}
  </select>
  
</mapper>