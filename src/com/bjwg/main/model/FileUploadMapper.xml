<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bjwg.main.dao.FileUploadDao">
	<resultMap id="BaseResultMap" type="com.bjwg.main.model.FileUpload">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<id column="fu_UPLOAD_ID" property="uploadId" jdbcType="DECIMAL" />
		<result column="fu_SOURCE_NAME" property="sourceName" jdbcType="VARCHAR" />
		<result column="fu_PATH" property="path" jdbcType="VARCHAR" />
		<result column="fu_SUFFIX_NAME" property="suffixName" jdbcType="VARCHAR" />
		<result column="fu_FILE_SIZE" property="fileSize" jdbcType="DECIMAL" />
		<result column="fu_CTIME" property="ctime" jdbcType="TIMESTAMP" />
		<result column="fu_UPLOAD_TYPE" property="uploadType" jdbcType="DECIMAL" />
		<result column="fu_RELATION_ID" property="relationId" jdbcType="DECIMAL" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		fu.UPLOAD_ID as fu_UPLOAD_ID, fu.SOURCE_NAME as fu_SOURCE_NAME,
		fu.PATH as fu_PATH,
		fu.SUFFIX_NAME as fu_SUFFIX_NAME, fu.FILE_SIZE as fu_FILE_SIZE, fu.CTIME as
		fu_CTIME,
		fu.UPLOAD_TYPE as fu_UPLOAD_TYPE, fu.RELATION_ID as fu_RELATION_ID
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.bjwg.main.model.FileUploadExample">
		<include refid="OracleDialectPrefix" />
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from hzd_file_upload fu
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
		<include refid="OracleDialectSuffix" />
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select
		<include refid="Base_Column_List" />
		from hzd_file_upload fu
		where fu.UPLOAD_ID = #{uploadId,jdbcType=DECIMAL}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		delete from hzd_file_upload
		where UPLOAD_ID = #{uploadId,jdbcType=DECIMAL}
	</delete>
	<insert id="insert" parameterType="com.bjwg.main.model.FileUpload">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<selectKey resultType="java.lang.Long" keyProperty="uploadId" order="AFTER" >
	      SELECT LAST_INSERT_ID()
	    </selectKey>
		insert into hzd_file_upload (SOURCE_NAME, PATH, SUFFIX_NAME,
		FILE_SIZE, CTIME, UPLOAD_TYPE,
		RELATION_ID)
		values (#{sourceName,jdbcType=VARCHAR}, #{path,jdbcType=VARCHAR},
		#{suffixName,jdbcType=VARCHAR},
		#{fileSize,jdbcType=DECIMAL}, #{ctime,jdbcType=TIMESTAMP}, #{uploadType,jdbcType=DECIMAL},
		#{relationId,jdbcType=DECIMAL})
	</insert>
	<insert id="insertSelective" parameterType="com.bjwg.main.model.FileUpload">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<selectKey resultType="java.lang.Long" keyProperty="uploadId" order="AFTER" >
	      SELECT LAST_INSERT_ID()
	    </selectKey>
		insert into hzd_file_upload
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="sourceName != null">
				SOURCE_NAME,
			</if>
			<if test="path != null">
				PATH,
			</if>
			<if test="suffixName != null">
				SUFFIX_NAME,
			</if>
			<if test="fileSize != null">
				FILE_SIZE,
			</if>
			<if test="ctime != null">
				CTIME,
			</if>
			<if test="uploadType != null">
				UPLOAD_TYPE,
			</if>
			<if test="relationId != null">
				RELATION_ID,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="sourceName != null">
				#{sourceName,jdbcType=VARCHAR},
			</if>
			<if test="path != null">
				#{path,jdbcType=VARCHAR},
			</if>
			<if test="suffixName != null">
				#{suffixName,jdbcType=VARCHAR},
			</if>
			<if test="fileSize != null">
				#{fileSize,jdbcType=DECIMAL},
			</if>
			<if test="ctime != null">
				#{ctime,jdbcType=TIMESTAMP},
			</if>
			<if test="uploadType != null">
				#{uploadType,jdbcType=DECIMAL},
			</if>
			<if test="relationId != null">
				#{relationId,jdbcType=DECIMAL},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.bjwg.main.model.FileUploadExample"
		resultType="java.lang.Integer">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select count(*) from hzd_file_upload fu
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByPrimaryKeySelective" parameterType="com.bjwg.main.model.FileUpload">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update hzd_file_upload
		<set>
			<if test="sourceName != null">
				SOURCE_NAME = #{sourceName,jdbcType=VARCHAR},
			</if>
			<if test="path != null">
				PATH = #{path,jdbcType=VARCHAR},
			</if>
			<if test="suffixName != null">
				SUFFIX_NAME = #{suffixName,jdbcType=VARCHAR},
			</if>
			<if test="fileSize != null">
				FILE_SIZE = #{fileSize,jdbcType=DECIMAL},
			</if>
			<if test="ctime != null">
				CTIME = #{ctime,jdbcType=TIMESTAMP},
			</if>
			<if test="uploadType != null">
				UPLOAD_TYPE = #{uploadType,jdbcType=DECIMAL},
			</if>
			<if test="relationId != null">
				RELATION_ID = #{relationId,jdbcType=DECIMAL},
			</if>
		</set>
		where UPLOAD_ID = #{uploadId,jdbcType=DECIMAL}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.bjwg.main.model.FileUpload">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update hzd_file_upload
		set SOURCE_NAME = #{sourceName,jdbcType=VARCHAR},
		PATH = #{path,jdbcType=VARCHAR},
		SUFFIX_NAME = #{suffixName,jdbcType=VARCHAR},
		FILE_SIZE = #{fileSize,jdbcType=DECIMAL},
		CTIME = #{ctime,jdbcType=TIMESTAMP},
		UPLOAD_TYPE = #{uploadType,jdbcType=DECIMAL},
		RELATION_ID = #{relationId,jdbcType=DECIMAL}
		where UPLOAD_ID = #{uploadId,jdbcType=DECIMAL}
	</update>
	<sql id="OracleDialectPrefix">
		<if test="page != null">
			select * from ( select row_.*, rownum rownum_ from (
		</if>
	</sql>
	<sql id="OracleDialectSuffix">
		<if test="page != null">
      <![CDATA[ ) row_ ) where rownum_ >= #{page.currentRow} and rownum_ <= #{page.currentEndRow} ]]>
		</if>
	</sql>
</mapper>