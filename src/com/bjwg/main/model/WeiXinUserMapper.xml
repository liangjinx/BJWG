<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bjwg.main.dao.WeiXinUserDao">
	<resultMap id="BaseResultMap" type="com.bjwg.main.model.WeiXinUser">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<id column="wx_UNIONID" property="unionid" jdbcType="CHAR" />
		<result column="wx_USER_ID" property="userId" jdbcType="DECIMAL" />
		<result column="wx_NICKNAME" property="nickname" jdbcType="VARCHAR" />
		<result column="wx_OPENID" property="openid" jdbcType="CHAR" />
		<result column="wx_PRIVILEGE" property="privilege" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		wx.UNIONID as wx_UNIONID, wx.USER_ID as wx_USER_ID, wx.NICKNAME as
		wx_NICKNAME, wx.OPENID as wx_OPENID,
		wx.PRIVILEGE as wx_PRIVILEGE
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.bjwg.main.model.WeiXinUserExample">
		<include refid="OracleDialectPrefix" />
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from bjwg_weixinuser wx
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
		<include refid="OracleDialectSuffix" />
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select
		<include refid="Base_Column_List" />
		from bjwg_weixinuser wx
		where wx.UNIONID = #{unionid,jdbcType=CHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		delete from bjwg_weixinuser
		where UNIONID = #{unionid,jdbcType=CHAR}
	</delete>
	<insert id="insert" parameterType="com.bjwg.main.model.WeiXinUser">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		insert into bjwg_weixinuser (UNIONID, USER_ID, NICKNAME,
		OPENID, PRIVILEGE)
		values (#{unionid,jdbcType=CHAR}, #{userId,jdbcType=DECIMAL},
		#{nickname,jdbcType=VARCHAR},
		#{openid,jdbcType=CHAR}, #{privilege,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.bjwg.main.model.WeiXinUser">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		insert into bjwg_weixinuser
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="unionid != null">
				UNIONID,
			</if>
			<if test="userId != null">
				USER_ID,
			</if>
			<if test="nickname != null">
				NICKNAME,
			</if>
			<if test="openid != null">
				OPENID,
			</if>
			<if test="privilege != null">
				PRIVILEGE,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="unionid != null">
				#{unionid,jdbcType=CHAR},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=DECIMAL},
			</if>
			<if test="nickname != null">
				#{nickname,jdbcType=VARCHAR},
			</if>
			<if test="openid != null">
				#{openid,jdbcType=CHAR},
			</if>
			<if test="privilege != null">
				#{privilege,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.bjwg.main.model.WeiXinUserExample"
		resultType="java.lang.Integer">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select count(*) from bjwg_weixinuser wx
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByPrimaryKeySelective" parameterType="com.bjwg.main.model.WeiXinUser">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update bjwg_weixinuser
		<set>
			<if test="userId != null">
				USER_ID = #{userId,jdbcType=DECIMAL},
			</if>
			<if test="nickname != null">
				NICKNAME = #{nickname,jdbcType=VARCHAR},
			</if>
			<if test="openid != null">
				OPENID = #{openid,jdbcType=CHAR},
			</if>
			<if test="privilege != null">
				PRIVILEGE = #{privilege,jdbcType=VARCHAR},
			</if>
		</set>
		where UNIONID = #{unionid,jdbcType=CHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.bjwg.main.model.WeiXinUser">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update bjwg_weixinuser
		set USER_ID = #{userId,jdbcType=DECIMAL},
		NICKNAME = #{nickname,jdbcType=VARCHAR},
		OPENID = #{openid,jdbcType=CHAR},
		PRIVILEGE = #{privilege,jdbcType=VARCHAR}
		where UNIONID = #{unionid,jdbcType=CHAR}
	</update>
	<sql id="OracleDialectPrefix">
		<if test="page != null">
			select * from ( select row_.*, rownum rownum_ from (
		</if>
	</sql>
	<sql id="OracleDialectSuffix">
		<if test="page != null">
      <![CDATA[ ) row_ ) where rownum_ >= #{page.currentRow} and rownum_ <= #{page.currentEndRow} ]]>
		</if>
	</sql>
</mapper>