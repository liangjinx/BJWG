package com.bjwg.main.dao;

import com.bjwg.main.model.User;
import com.bjwg.main.model.UserCenter;
import com.bjwg.main.model.UserExample;

import java.util.List;
import java.util.Map;

public interface UserDao {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bjwg_user
     *
     * @mbggenerated
     */
    int countByExample(UserExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bjwg_user
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(Long userId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bjwg_user
     *
     * @mbggenerated
     */
    int insert(User record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bjwg_user
     *
     * @mbggenerated
     */
    int insertSelective(User record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bjwg_user
     *
     * @mbggenerated
     */
    List<User> selectByExample(UserExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bjwg_user
     *
     * @mbggenerated
     */
    User selectByPrimaryKey(Long userId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bjwg_user
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(User record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bjwg_user
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(User record);
    
    /**
     * 指定期的排行
     * @param queryMap
     * @return
     * @throws Exception
     */
    List<User> selectCurrentProjectTop(Map<String, Object> queryMap) throws Exception;

    /**
     * 查询个人中心的数据:钱包、猪仔、总收益
     * @param params
     * @return
     * @throws Exception
     */
	UserCenter selectUserCenterData(Map<String, Object> params) throws Exception;
	
	/**
	 * 查询我的好友
	 * @param queryMap
	 * @return
	 * @throws Exception
	 */
	public List<User> selectMyFreinds(Map<String, Object> queryMap) throws Exception;
	/**
	 * 统计我的新的好友
	 * @param queryMap
	 * @return
	 * @throws Exception
	 */
	public int countMyNewFreinds(Map<String, Object> queryMap) throws Exception;

	/**
	 * 搜索好友
	 * @param queryMap
	 * @return
	 * @throws Exception
	 */
	List<User> searchFreinds(Map<String, Object> queryMap) throws Exception;
	
	/**
	 * 搜索好友记录数统计
	 * @param queryMap
	 * @return
	 * @throws Exception
	 */
	Integer countSearchFreinds(Map<String, Object> queryMap) throws Exception;
    
	/**
	 * 统计我的好友数
	 * @param userId
	 * @return
	 */
	Integer countMyFriend(Long userId);

	List<User> selectEpInfo(Long userId);
    
	/**
	 * 通过用户名查询用户
	 */
	User selectByUsername(String username);
	
}